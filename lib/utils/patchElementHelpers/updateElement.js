import { mixin } from '../mixin'
import { setProp } from '../setProp'

/**
 * @description A function to update an element based on a virtual dom node.
 * @param {Node} element
 * @param {Object} oldProps The original props used to create the element.
 * @param {Object} props New props generated by the virtual dom.
 * @param {boolean} isSVG Whether we are dealing with SVG or not.
 * @function {function(element: Node, oldProps: VNode, props: VNode,isSVG: boolean): void}
 * @returns {void} undefined
 */
export function updateElement(element, oldProps, props, isSVG) {
  for (let prop in mixin(oldProps, props)) {
    if (
      props[prop] !==
      (prop === 'value' || prop === 'checked' ? element[prop] : oldProps[prop])
    ) {
      setProp(element, prop, props[prop], oldProps[prop], isSVG)
    }
  }
  // Handle lifecycle hook:
  if (element['mounted'] && props && props['onComponentDidUpdate']) {
    props['onComponentDidUpdate'].call(
      props['onComponentDidUpdate'],
      oldProps,
      props,
      element
    )
  }
}
